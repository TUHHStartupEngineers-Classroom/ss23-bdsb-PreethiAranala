{
  "hash": "99339728cefb0a4a9cd2c0c9297c865b",
  "result": {
    "markdown": "---\nformat: html\ntitle: \"Data Acquisition\"\nauthor: \"Preethi Aranala\"\n---\n\n\n# Challenge 2: WEBSCRAPING ----\n\n# 1.0 Libraries ----\n\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-1_d7d8ed236724f2ad6843f5957d53be4c'}\n\n```{.r .cell-code}\nlibrary(tidyverse) # Main Package - Loads dplyr, purrr, etc.\nlibrary(readr)     # HTML Hacking & Web Scraping\nlibrary(xopen)     # Quickly opening URLs\nlibrary(glue)      # concatenate strings\nlibrary(stringi)   # character string/text processing\nlibrary(xml2)\n```\n:::\n\n\n# 2.0 Collect Product Categories\n\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-2_e236f880ab6a14e7e576517556b5796d'}\n\n```{.r .cell-code}\nurl_home          <- \"https://www.rosebikes.com/bikes/mtb/cross-country\"\nxopen(url_home)\nhtml_home         <- read_html(url_home)\n\nbike_category_tbl <- html_home %>%\n  html_nodes(css = \"a.btn.btn--primary.btn--block.catalog-category-bikes__button\") %>%\n  html_attr('href') %>%\n  enframe(name = \"position\", value = \"subdirectory\") %>%\n  mutate(\n    url = glue(\"https://www.rosebikes.com{subdirectory}\")\n  ) %>%\n  distinct(url)\n\nlibrary(knitr)\n\nkable(head(bike_category_tbl))\n```\n:::\n\n\n# 3.0 Collect Bike Category and Price----\n\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-3_db761215a4f7386bcac0e4599fcbf068'}\n\n```{.r .cell-code}\nbike_type_tbl <- tibble()\n\nfor (url in bike_category_tbl$url) {\n  xopen(url)\n  html_bike_type <- read_html(url)\n  \n  model_name <- html_bike_type %>%\n    html_nodes(css = \".catalog-category-model__title\") %>%\n    html_text() \n  \n  \n  price <- html_bike_type %>%\n    html_nodes(css = \".catalog-category-model__price-current-value\") %>%\n    html_text() %>%\n    str_remove_all(\"[^0-9.]\") %>%\n    as.numeric()\n  \n  bike_type_tbl <- bind_rows(bike_type_tbl, tibble(model_name, price)) %>%\n    distinct(model_name, .keep_all = TRUE)\n  \n}\nkable(head(bike_type_tbl))\n```\n:::\n\n\n# 4.0 Challenge 1: API\n\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-4_cc28fe3830f30349e4b1d85fd5a0e45d'}\n\n```{.r .cell-code}\nlibrary(RSQLite)\nlibrary(dplyr)\nlibrary(magrittr)\nlibrary(httr)\nlibrary(glue)\nlibrary(jsonlite)\n\ncon <- RSQLite::dbConnect(drv    = SQLite(), \n                          dbname = \"00_raw_data/02_chinook/Chinook_Sqlite.sqlite\")\n\nalbum_tbl <- tbl(con,\"Album\") %>% collect()\n\ndbDisconnect(con)\ncon\n\nresp <- GET(\"https://swapi.dev/api/people/1/\")\n\n# Wrapped into a function\nsw_api <- function(path) {\n  url <- modify_url(url = \"https://swapi.dev\", path = glue(\"/api{path}\"))\n  resp <- GET(url)\n  stop_for_status(resp) # automatically throws an error if a request did not succeed\n}\n\nresp <- sw_api(\"/people/1\")\nresp                     \n\nresp %>% \n  .$content %>% \n  rawToChar() %>% \n  fromJSON()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}