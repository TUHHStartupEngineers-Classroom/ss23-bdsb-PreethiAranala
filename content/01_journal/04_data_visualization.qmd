---
format: html
title: "Data Visualization"
author: "Preethi Aranala"
<<<<<<< Updated upstream
toc: true
=======
>>>>>>> Stashed changes
---
#1.0 LIBRARIES

<<<<<<< Updated upstream
#1.0 Libraries

```{r}
#| eval: false
#| 
=======
>>>>>>> Stashed changes
library(tidyverse)
library(lubridate)
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
<<<<<<< Updated upstream
```

# 2.0 Importing Data from Web

```{r}
#| eval: false
#| 
=======

# 2.0 IMPORTING DATA
>>>>>>> Stashed changes
covid_data_tbl <- read_csv("https://covid.ourworldindata.org/data/owid-covid-data.csv")
covid_refined_tbl <- covid_data_tbl %>%
    filter(location %in% c("Germany","France","Spain","United States","United Kingdom")) %>%
    select(location, date, total_cases, total_deaths)
<<<<<<< Updated upstream
```

# 3.0 Challenge 1

# 3.1 Data Manipulation

```{r}
#| eval: false
#| 
=======

# 3 Challenge 1
# 3.1 Manipulating Data
>>>>>>> Stashed changes
covid_refined_tbl$date <- as.Date(covid_refined_tbl$date)
covid_refined_tbl <- covid_refined_tbl %>%
  mutate(month = floor_date(date, unit = "month"),
         day = day(date)) %>% 
         group_by(month) %>%
         filter(day == max(day))

million <- function(x) {
  paste0(x / 1000000, "M")
}
<<<<<<< Updated upstream
```

# 3.2 Data Visualization

```{r}
#| eval: false
#| 
=======

# 3.2 Visualizing Data
>>>>>>> Stashed changes
ggplot(covid_refined_tbl, aes(x = month, y = total_cases, color = location)) +
  geom_line() +
  labs(x = "Month", y = "Cumulative Cases", color = "Country") +
  scale_x_date(date_breaks = "1 month", date_labels = "%Y-%m") +
  scale_y_continuous(labels = million) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "COVID-19 confirmed cases worldwide")
<<<<<<< Updated upstream
```

# 4.0 Challenge 2

```{r}
#| eval: false
#| 
library(maps)

world <- map_data("world") 
```

# 4.1 Data Manipulation

```{r}
#| eval: false
#| 
=======
  
#4 Challenge 2

library(maps)

world <- map_data("world") 

# 4.2 Data Manipulation
>>>>>>> Stashed changes
covid_geo_tbl <- covid_data_tbl %>%
    select(location, date, total_cases, total_deaths)

covid_geo_tbl$date <- as.Date(covid_geo_tbl$date)
covid_geo_tbl <- covid_geo_tbl %>%
  mutate(month = floor_date(date, unit = "month"),
         day = day(date)) %>% 
         group_by(month) %>%
         arrange(desc(date)) %>%
         na.omit() %>%
         filter(date == "2023-05-17") %>%
         mutate(case_fatality = total_deaths * 100/total_cases)
         
         
covid_geo_tbl$month <- NULL
covid_geo_tbl$day <- NULL

world_united <- covid_geo_tbl %>%
<<<<<<< Updated upstream
  left_join(world, by = c("location" = "region"), relationship = "many-to-many") %>%
=======
  left_join(world_tbl, by = c("location" = "region"), relationship = "many-to-many") %>%
>>>>>>> Stashed changes
         mutate(location = case_when(
        location == "United Kingdom" ~ "UK",
        location == "United States" ~ "USA",
    location == "Democratic Republic of Congo" ~ "Democratic Republic of the Congo",
    TRUE ~ location
    )) %>%
  distinct()
<<<<<<< Updated upstream
```

# 4.2 Data Visualization

`{r} #| eval: false #|  ggplot(world_united, aes(x = long, y = lat, map_id = location, fill = case_fatality)) +   geom_map(map = world, aes(fill = case_fatality, map_id = location, x = long, y = lat), color = "black") +   scale_fill_gradient(low = "orange", high = "red", na.value = "gray", name = "Case Fatality Percent") +   labs(title = "Case Fatality Map",   subtitle = "as of 2023-05-17") +   theme(axis.text = element_blank(),` axis.title = element_blank())
=======

# 4.3 Visualizing Data 

ggplot(world_united, aes(x = long, y = lat, map_id = location, fill = case_fatality)) +
  geom_map(map = world, aes(fill = case_fatality, map_id = location, x = long, y = lat), color = "black") +
  scale_fill_gradient(low = "orange", high = "red", na.value = "gray", name = "Case Fatality Percent") +
  labs(title = "Case Fatality Map",
  subtitle = "as of 2023-05-17") +
  theme(axis.text = element_blank(),
    axis.title = element_blank())
  
  
>>>>>>> Stashed changes
