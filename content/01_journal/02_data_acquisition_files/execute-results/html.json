{
  "hash": "99a241650e816be909fe493543257d30",
  "result": {
    "markdown": "---\ntitle: \"Data Acquisition\"\nauthor: \"Preethi Aranala\"\n---\n\n\n# Challenge 2: WEBSCRAPING ----\n\n# 1.0 Libraries ----\n\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-1_62a3a706165ef9ec7f194eb60e73e5a4'}\n\n```{.r .cell-code}\nlibrary(tidyverse) # Main Package - Loads dplyr, purrr, etc.\nlibrary(readr)     # HTML Hacking & Web Scraping\nlibrary(xopen)     # Quickly opening URLs\nlibrary(purrr)  # converts JSON files to R objects\nlibrary(glue)      # concatenate strings\nlibrary(stringi)   # character string/text processing\nlibrary(dplyr)\n```\n:::\n\n\n# 2.0 Collect Product Categories\n\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-2_1bc656390494795be97bc95bb371bf00'}\n\n```{.r .cell-code}\nurl_home          <- \"https://www.rosebikes.com/bikes/mtb/cross-country\"\nxopen(url_home)\nhtml_home         <- read_html(url_home)\nxopen(url_home)\n\nbike_category_tbl <- html_home %>%\nhtml_nodes(css = \"a.btn.btn--primary.btn--block.catalog-category-bikes__button\") %>%\nhtml_attr('href') %>%\nenframe(name = \"position\", value = \"subdirectory\") %>%\nmutate(\nurl = glue(\"https://www.rosebikes.com{subdirectory}\")\n) %>%\ndistinct(url)\n\nlibrary(knitr)\n\nkable(head(bike_category_tbl))\n```\n:::\n\n\n# 3.0 Collect Bike Category and Price----\n\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-3_13d02f800e3419d448baff137267358e'}\n\n```{.r .cell-code}\nbike_type_tbl <- tibble()\n\nfor (url in bike_category_tbl$url) {\nxopen(url)\nhtml_bike_type <- read_html(url)\n\nmodel_name <- html_bike_type %>%\nhtml_nodes(css = \".catalog-category-model__title\") %>%\nhtml_text() \n\n\nprice <- html_bike_type %>%\nhtml_nodes(css = \".catalog-category-model__price-current-value\") %>%\nhtml_text() %>%\nstr_remove_all(\"[^0-9.]\") %>%\nas.numeric()\n\nbike_type_tbl <- bind_rows(bike_type_tbl, tibble(model_name, price)) %>%\ndistinct(model_name, .keep_all = TRUE)\n\n}\nkable(head(bike_type_tbl))\n```\n:::\n\n\n# 4.0 Challenge 1: API\n\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-4_9fc7dd68731dfdb5c90f92ef85a43260'}\n\n```{.r .cell-code}\nlibrary(RSQLite)\nlibrary(dplyr)\nlibrary(magrittr)\nlibrary(httr)\nlibrary(glue)\nlibrary(jsonlite)\n\ncon <- RSQLite::dbConnect(drv    = SQLite(), \ndbname = \"00_raw_data/02_chinook/Chinook_Sqlite.sqlite\")\n\nalbum_tbl <- tbl(con,\"Album\") %>% collect()\n\ndbDisconnect(con)\ncon\n\nresp <- GET(\"https://swapi.dev/api/people/1/\")\n\n# Wrapped into a function\nsw_api <- function(path) {\nurl <- modify_url(url = \"https://swapi.dev\", path = glue(\"/api{path}\"))\nresp <- GET(url)\nstop_for_status(resp) # automatically throws an error if a request did not succeed\n}\n\nresp <- sw_api(\"/people/1\")\nresp                     \n\nresp %>% \n.$content %>% \nrawToChar() %>% \nfromJSON()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}